// 
// Real ESSI Simulator
// Modeling and Simulation Examples
// for more information, see: http://real-essi.info
// 



model name "t";
new loading stage "1";
add material # 1 type linear_elastic_isotropic_3d mass_density=10.0*kg/m^3 elastic_modulus = 100.0*N/m^2 poisson_ratio=0.3;
add node # 1 at (1*m, 1*m , 1*m) with 3 dofs;      
add node # 2 at (0*m, 1*m , 1*m) with 3 dofs;      
add node # 3 at (0*m, 0*m , 1*m) with 3 dofs;      
add node # 4 at (1*m, 0*m , 1*m) with 3 dofs;      
add node # 5 at (1*m, 1*m , 0*m) with 3 dofs;      
add node # 6 at (0*m, 1*m , 0*m) with 3 dofs;      
add node # 7 at (0*m, 0*m , 0*m) with 3 dofs;      
add node # 8 at (1*m, 0*m , 0*m) with 3 dofs; 
 
add acceleration field # 1 ax=0.0*g ay=0.0*g az=-1.0*g;
add element # 1 type 8_27_NodeBrick using 2 Gauss points each direction with nodes (1,2,3,4,5,6,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0) use material # 1;
fix node No 5 dofs all;
fix node No 6 dofs all;
fix node No 7 dofs all;
fix node No 8 dofs all;
add load # 1 to element # 1 type self_weight use acceleration field # 1;
// add load # <.> to node # <.> type linear FORCETYPE = <force or moment>; //FORCETYPE = Fx Fy Fz Mx My Mz F_fluid_x F_fluid_y F_fluid_z
// add load # 2 to node #2  type linear Fx = 100*N ; 



define load factor increment 0.1;
define algorithm with_no_convergence_check;
define solver UMFPack;
simulate 2 steps using static algorithm;




new loading stage "2";
add acceleration field # 2 ax=0.0*g ay=1.0*g az=0.0*g;
add load # 2 to element # 1 type self_weight use acceleration field # 2;
define load factor increment 0.1;
define algorithm with_no_convergence_check;
define solver UMFPack;
simulate 2 steps using static algorithm;


bye;
