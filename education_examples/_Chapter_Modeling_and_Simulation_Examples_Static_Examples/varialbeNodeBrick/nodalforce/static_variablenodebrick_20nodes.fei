// 
// Real ESSI Simulator
// Modeling and Simulation Examples
// for more information, see: http://real-essi.info
// 

// 
// Real ESSI Simulator
// Modeling and Simulation Examples
// for more information, see: http://real-essi.info
// 


model name "variablenodebrick";
new loading stage "load";


add material # 1 type linear_elastic_isotropic_3d mass_density=0.0*kg/m^3 elastic_modulus = 1.0*N/m^2 poisson_ratio=0.3;


// Nodal  Coordinates
add node # 1  at (2.0*m, 2.0*m, 2.0*m) with 3 dofs;
add node # 2  at (0.0*m, 2.0*m, 2.0*m) with 3 dofs;
add node # 3  at (0.0*m, 0.0*m, 2.0*m) with 3 dofs;
add node # 4  at (2.0*m, 0.0*m, 2.0*m) with 3 dofs;
add node # 5  at (2.0*m, 2.0*m, 0.0*m) with 3 dofs;
add node # 6  at (0.0*m, 2.0*m, 0.0*m) with 3 dofs;
add node # 7  at (0.0*m, 0.0*m, 0.0*m) with 3 dofs;
add node # 8  at (2.0*m, 0.0*m, 0.0*m) with 3 dofs;
add node # 9  at (1.0*m, 2.0*m, 2.0*m) with 3 dofs;
add node # 10 at (0.0*m, 1.0*m, 2.0*m) with 3 dofs;
add node # 11 at (1.0*m, 0.0*m, 2.0*m) with 3 dofs;
add node # 12 at (2.0*m, 1.0*m, 2.0*m) with 3 dofs;
add node # 13 at (1.0*m, 2.0*m, 0.0*m) with 3 dofs;
add node # 14 at (0.0*m, 1.0*m, 0.0*m) with 3 dofs;
add node # 15 at (1.0*m, 0.0*m, 0.0*m) with 3 dofs;
add node # 16 at (2.0*m, 1.0*m, 0.0*m) with 3 dofs;
add node # 17 at (2.0*m, 2.0*m, 1.0*m) with 3 dofs;
add node # 18 at (0.0*m, 2.0*m, 1.0*m) with 3 dofs;
add node # 19 at (0.0*m, 0.0*m, 1.0*m) with 3 dofs;
add node # 20 at (2.0*m, 0.0*m, 1.0*m) with 3 dofs;

 

// Elements
add element # 1 type variable_node_brick_8_to_27 using 3 Gauss points each direction with nodes (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,0,0,0,0,0,0) use material # 1;


// Constrains
fix node No 5 dofs all;
fix node No 6 dofs all;
fix node No 7 dofs all;
fix node No 8 dofs all;
fix node No 13 dofs all;
fix node No 14 dofs all;
fix node No 15 dofs all;
fix node No 16 dofs all;


// Load
add load # 1 to node # 1  type linear Fz=-1*N;
add load # 2 to node # 2  type linear Fz=-1*N;
add load # 3 to node # 3  type linear Fz=-1*N;
add load # 4 to node # 4  type linear Fz=-1*N;
add load # 5 to node # 9  type linear Fz=-1*N;
add load # 6 to node # 10 type linear Fz=-1*N;
add load # 7 to node # 11 type linear Fz=-1*N;
add load # 8 to node # 12 type linear Fz=-1*N;


define load factor increment 0.1;
define algorithm with_no_convergence_check;
define solver UMFPack;

simulate 2 steps using static algorithm;


print node # 1;
print node # 5;
print node # 9;
print node # 11;
print node # 14;
print node # 19;
print node # 20;


bye;
