model name "beam_1element" ;

// add node
add node #  1 at (   0.0*m ,    0.0*m,     0.0*m)  with 6 dofs;
add node #  2 at (   1.0*m ,    0.0*m,     0.0*m)  with 6 dofs;
	
// Geometry: width and height
b=0.2*m;
h=0.2*m;

// Materials: properties
natural_period    = 1*s;				
natural_frequency  = 2*pi/natural_period;
elastic_constant  = 1e9*N/m^2; 
I=b*h^3/12.0;
A=b*h;
L=1*m;
rho 	= (1.8751)^4*elastic_constant*I/(natural_frequency^2*L^4*A);
possion_ratio=0.3;

// add elements
add element # 1 type beam_elastic with nodes (1,2) 
	cross_section =   b*h 
	elastic_modulus =  elastic_constant
	shear_modulus =  elastic_constant/2/(1+possion_ratio)
	torsion_Jx =  0.33*b*h^3
	bending_Iy =  b*h^3/12
	bending_Iz =  b*h^3/12
	mass_density = rho
	xz_plane_vector = ( 1, 0, 1) 
	joint_1_offset = (0*m, 0*m, 0*m) 
	joint_2_offset = (0*m, 0*m, 0*m);

// add boundary condition
fix node #      1 dofs all;

// // ----------------------------------------------------------------------------
// // --no-damping-------------------------------------------------------------
// // ----------------------------------------------------------------------------
// new loading stage "no-damping";
// add load # 1 to node # 2 type path_time_series 
// 	Fz =  1.*N
// 	series_file = "freeVibration.txt" ;
// define dynamic integrator Newmark with gamma = 0.5 beta = 0.25;
// define algorithm With_no_convergence_check ;
// define solver ProfileSPD;
// simulate 100 steps using transient algorithm 
// 	time_step = 0.1*s;

// // ----------------------------------------------------------------------------
// // --Newmark-damping-------------------------------------------------------------
// // ----------------------------------------------------------------------------
// remove load # 2;
// new loading stage "Newmark-damping";
// add load # 3 to node # 2 type path_time_series 
// 	Fz =  1.*N
// 	series_file = "freeVibration.txt" ;
// define dynamic integrator Newmark with gamma = 0.6 beta = 0.3025;
// define algorithm With_no_convergence_check ;
// define solver ProfileSPD;
// simulate 100 steps using transient algorithm 
// 	time_step = 0.1*s;

// // ----------------------------------------------------------------------------
// // --HHT-damping-------------------------------------------------------------
// // ----------------------------------------------------------------------------
// remove load # 3;
// new loading stage "HHT-damping";
// add load # 4 to node # 2 type path_time_series 
// 	Fz =  1.*N
// 	series_file = "freeVibration.txt" ;
// define dynamic integrator Hilber_Hughes_Taylor with alpha = -0.20;
// define algorithm With_no_convergence_check ;
// define solver ProfileSPD;
// simulate 1000 steps using transient algorithm 
// 	time_step = 0.01*s;


// // ----------------------------------------------------------------------------
// // --Rayleigh-damping-------------------------------------------------------------
// // ----------------------------------------------------------------------------
// remove load # 4;
// simulate using eigen algorithm	number_of_modes = 2;
f1=0.996807/s;
f2=0.996807/s;
w1 = 2*pi*f1;
w2 = 2*pi*f2;
xi=0.05;
rayl_a1 = 2*xi/(w1 + w2);
rayl_a0 = rayl_a1*w1*w2;

add damping # 1 type Rayleigh with 
	a0 =  rayl_a0
	a1 =  rayl_a1
	stiffness_to_use = Initial_Stiffness;
add damping # 1 to element # 1;

new loading stage "Rayleigh-damping";
add load # 5 to node # 2 type path_time_series 
	Fz =  1.*N
	series_file = "freeVibration.txt" ;
define dynamic integrator Newmark with gamma = 0.5 beta = 0.25;
define algorithm With_no_convergence_check ;
define solver ProfileSPD;
simulate 100 steps using transient algorithm 
	time_step = 0.1*s;


bye;