// 
// Real ESSI Simulator
// Modeling and Simulation Examples
// for more information, see: http://real-essi.info
// 



model name "One_Bar_Dynamics" ;

add material #1 type uniaxial_elastic elastic_modulus =  100*Pa viscoelastic_modulus =  0*Pa*s;

add node #1 at (0*m,0*m,0*m)     with  3 dofs;
add node #2 at (0*m,0*m,0*m)     with  3 dofs;
add node #3 at (0*m,0*m,1*m)     with  3 dofs;

fix node #1 dofs ux uy uz;
fix node #3 dofs ux uy uz ;
fix node #2 dofs ux uy  ;

add element #1  type truss with nodes (2,3) use material # 1 cross_section = 1*m^2 mass_density =  1*kg/m^3;
add mass to node #2  
 mx = 1*kg 
 my = 1*kg 
 mz = 1*kg;

add element #3  type SoftContact with nodes (1,2) 
 initial_normal_stiffness =1e4*N/m
 stiffening_rate = 1000/m 
 max_normal_stiffness =1e7*N/m
 tangential_stiffness =  0*Pa*m
 normal_damping =  10*N/m*s
 tangential_damping =   0*N/m*s
 friction_ratio =  0.3   
 contact_plane_vector = (0,0,1);


new loading stage "Adding Normal Load";

 add load #1  to node #2  type linear Fz = 1*N;
 Nsteps = 1;
 tol = 1e-3;
 define convergence test Norm_Unbalance  
   tolerance =  tol
   maximum_iterations = 10
   verbose_level = 4;

 define algorithm Newton;
 define solver UMFPack;

 define load factor increment 1/Nsteps;
 simulate Nsteps steps using static algorithm;

new loading stage "Dynamic_Vibration";

 remove load# 1;
 tol = 5e-5; define convergence test Norm_Unbalance 
  tolerance=tol 
  maximum_iterations=10  
  verbose_level=4;

 define algorithm Newton;
 define solver UMFPack;

 gam = 0.5;
 bet = 0.25*(0.5+gam)^2;
 define dynamic integrator Newmark with gamma =gam beta =bet;
 simulate 200 steps using transient algorithm 
  time_step = 0.01*s;
  
bye;  

