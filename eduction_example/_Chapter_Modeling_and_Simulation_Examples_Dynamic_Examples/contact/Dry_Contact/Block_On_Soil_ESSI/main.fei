// 
// Real ESSI Simulator
// Modeling and Simulation Examples
// for more information, see: http://real-essi.info
// 



model name "Block_On_Soil"; 

add acceleration field # 1 ax = 0*g ay = 0*g az = -1*g ; 

Vs = 100*m/s; 
rho = 2000*kg/m^3; 
nu = 0.3; 
G0 = rho*Vs^2; 
E0 = 2*G0*(1+nu); 

add material # 1 type linear_elastic_isotropic_3d mass_density = rho elastic_modulus = E0 poisson_ratio = nu; 
add material # 2 type linear_elastic_isotropic_3d mass_density = 2400*kg/m^3 elastic_modulus = 10e9*Pa poisson_ratio = 0.2; 

include "geometry.fei";

// Contact Element Parameters
Ki = 5*MPa;                 // initial normal stiffness
Sr = 100;                    // Stiffening rate
Kn = 800*MPa;                // normal stiffness
Kt = 800*kPa;                // tangential stiffness
Cn = 50*Pa*s;                // normal damping 
Ct = 50*Pa*s;                // tangential damping
Fr = 0.68;                   // residual friction coefficient
ShearZoneThickness = 5e-3*m; // Shear Zone Thickness
Softening_rate = 40;
Pleateau_Size = 8;
mu_p0 = 0.9;
mu_k  = 0.1;

// include "HardContact.fei";
// include "HardContact_ElPPlShear.fei";
// include "HardContact_NonLinHardShear.fei";
// include "HardContact_NonLinHardSoftShear.fei";
include "SoftContact.fei";
// include "SoftContact_ElPPlShear.fei";
// include "SoftContact_NonLinHardShear.fei";
// include "SoftContact_NonLinHardSoftShear.fei";

new loading stage "Self_Weight"; 

add load # 1 to all elements type self_weight use acceleration field # 1; 
include "load.fei"; 

tol = 1e-3;
define convergence test Relative_Norm_Unbalanced_Force tolerance = tol minimum_absolute_tolerance = 10 maximum_iterations = 10 ;
define algorithm NewtonLineSearch; 
define solver UMFPack; 
NumSteps = 10; 
define load factor increment 1/NumSteps; 
simulate NumSteps steps using static algorithm; 

new loading stage "Uniform_Acceleration"; 

f_1 = 0.5*Hz; 
f_2 = 5.0*Hz; 
xi_1 = 1; 
xi_2 = 1; 
a_0 = 4*pi*f_1*f_2*(f_1*xi_2 - f_2*xi_1)/(f_1^2 - f_2^2); 
a_1 = (f_1*xi_1 - f_2*xi_2)/(pi*(f_1^2 - f_2^2)); 

Damping = 0.5; 
add damping # 1 type Rayleigh with a0 = a_0*Damping a1 = a_1*Damping stiffness_to_use = Initial_Stiffness; 
include "Damping.fei"; 

add uniform acceleration #2 to all nodes dof ux 
 time_step =  0.01*s
 scale_factor =  10 * m/s^2
 initial_velocity =  0*m/s
 acceleration_file = "acc.txt";

NumSteps = 6000; 
TotalTime = 6*s; 

tol = 1e-3;
define convergence test Relative_Norm_Unbalanced_Force tolerance = tol minimum_absolute_tolerance = 100 maximum_iterations = 50 ;
define algorithm Newton_With_Subincrement using minimum_time_step =  TotalTime/NumSteps/10/s;
define solver UMFPack; 

gam = 0.6; 
bet = 0.25*(0.5+gam)^2; 
define dynamic integrator Newmark with gamma = gam beta = bet; 
simulate NumSteps steps using transient algorithm time_step = TotalTime/NumSteps; 

bye; 
