model name "cantilever_4NodeANDES" ;
h     = 1*m;       
Eshell  = 1e8*N/m^2; 
nu    = 0.0;        // Poisson's ratio
rho   = 0*kg/m^3;     // Mass density
add material # 1 type linear_elastic_isotropic_3d
  mass_density = rho
  elastic_modulus = Eshell
  poisson_ratio = nu;
include "add_node.fei";
include "element.fei";
include "constraint.fei"';
new loading stage "y";
//NODE 5 & 12 IN THE middle 3 meters
// add load # 1 to node # 8 type linear Fy=-50*N;
// add load # 2 to node # 2 type linear Fy=-50*N;
add acceleration field # 1 ax=0.0*g ay=0.0*g az=-1.0*g;
add load # 1 to element # 1 type self_weight use acceleration field # 1;
add load # 2 to element # 2 type self_weight use acceleration field # 1;
add load # 3 to element # 3 type self_weight use acceleration field # 1;
add load # 4 to element # 4 type self_weight use acceleration field # 1;
add load # 5 to element # 5 type self_weight use acceleration field # 1;
add load # 6 to element # 6 type self_weight use acceleration field # 1;

define algorithm With_no_convergence_check ;
define solver UMFPack;
define load factor increment 1;
simulate 1 steps using static algorithm;
// /////////////////////////
// new loading stage "y";
// //NODE 5 & 12 IN THE middle 3 meters
// // remove load # <.>;
// remove load # 1;
// remove load # 2;
// add load # 3 to node # 8 type linear Fy=50*N;
// add load # 4 to node # 2 type linear Fy=50*N;
// define algorithm With_no_convergence_check ;
// define solver UMFPack;
// define load factor increment 1;
// simulate 1 steps using static algorithm;
bye;