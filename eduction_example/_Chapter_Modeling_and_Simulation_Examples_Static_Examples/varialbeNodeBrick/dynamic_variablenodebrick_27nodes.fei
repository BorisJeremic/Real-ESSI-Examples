// ESSI Test Suite
// ---------------------------------------------------------------------


model name "variablenodebrick";
new loading stage "load";


add material # 1 type linear_elastic_isotropic_3d mass_density=10.0*kg/m^3 elastic_modulus = 1.0*N/m^2 poisson_ratio=0.3;


// Nodal  Coordinates
add node # 1  at (2.0*m, 2.0*m, 2.0*m) with 3 dofs;
add node # 2  at (0.0*m, 2.0*m, 2.0*m) with 3 dofs;
add node # 3  at (0.0*m, 0.0*m, 2.0*m) with 3 dofs;
add node # 4  at (2.0*m, 0.0*m, 2.0*m) with 3 dofs;
add node # 5  at (2.0*m, 2.0*m, 0.0*m) with 3 dofs;
add node # 6  at (0.0*m, 2.0*m, 0.0*m) with 3 dofs;
add node # 7  at (0.0*m, 0.0*m, 0.0*m) with 3 dofs;
add node # 8  at (2.0*m, 0.0*m, 0.0*m) with 3 dofs;
add node # 9  at (1.0*m, 2.0*m, 2.0*m) with 3 dofs;
add node # 10 at (0.0*m, 1.0*m, 2.0*m) with 3 dofs;
add node # 11 at (1.0*m, 0.0*m, 2.0*m) with 3 dofs;
add node # 12 at (2.0*m, 1.0*m, 2.0*m) with 3 dofs;
add node # 13 at (1.0*m, 2.0*m, 0.0*m) with 3 dofs;
add node # 14 at (0.0*m, 1.0*m, 0.0*m) with 3 dofs;
add node # 15 at (1.0*m, 0.0*m, 0.0*m) with 3 dofs;
add node # 16 at (2.0*m, 1.0*m, 0.0*m) with 3 dofs;
add node # 17 at (2.0*m, 2.0*m, 1.0*m) with 3 dofs;
add node # 18 at (0.0*m, 2.0*m, 1.0*m) with 3 dofs;
add node # 19 at (0.0*m, 0.0*m, 1.0*m) with 3 dofs;
add node # 20 at (2.0*m, 0.0*m, 1.0*m) with 3 dofs;
add node # 21 at (1.0*m, 1.0*m, 1.0*m) with 3 dofs;
add node # 22 at (1.0*m, 2.0*m, 1.0*m) with 3 dofs;
add node # 23 at (0.0*m, 1.0*m, 1.0*m) with 3 dofs;
add node # 24 at (1.0*m, 0.0*m, 1.0*m) with 3 dofs;
add node # 25 at (2.0*m, 1.0*m, 1.0*m) with 3 dofs;
add node # 26 at (1.0*m, 1.0*m, 2.0*m) with 3 dofs;
add node # 27 at (1.0*m, 1.0*m, 0.0*m) with 3 dofs;
 


// Elements
add element # 1 type 8_27_NodeBrick with nodes (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27) use material # 1;


// Constrains
fix node # 5  dofs uy uz;
fix node # 6  dofs uy uz;
fix node # 7  dofs uy uz;
fix node # 8  dofs uy uz;
fix node # 13 dofs uy uz;
fix node # 14 dofs uy uz;
fix node # 15 dofs uy uz;
fix node # 16 dofs uy uz;
fix node # 27 dofs uy uz;



// Damping
add damping # 1 type Rayleigh with a0 = 0.2356/s a1 = 0.0795*s stiffness_to_use = Initial_Stiffness;
add damping # 1 to element # 1;


// Imposing motions
add imposed motion # 1 to node # 5  dof ux time_step = 0.01*s displacement_scale_unit = 10000.0*m displacement_file = "pathseries_displacement.feimotion" velocity_scale_unit = 10000.0*m/s velocity_file = "pathseries_velocity.feimotion" acceleration_scale_unit = 10000.0*m/s/s acceleration_file = "pathseries_acceleration.feimotion";
add imposed motion # 2 to node # 6  dof ux time_step = 0.01*s displacement_scale_unit = 10000.0*m displacement_file = "pathseries_displacement.feimotion" velocity_scale_unit = 10000.0*m/s velocity_file = "pathseries_velocity.feimotion" acceleration_scale_unit = 10000.0*m/s/s acceleration_file = "pathseries_acceleration.feimotion";
add imposed motion # 3 to node # 7  dof ux time_step = 0.01*s displacement_scale_unit = 10000.0*m displacement_file = "pathseries_displacement.feimotion" velocity_scale_unit = 10000.0*m/s velocity_file = "pathseries_velocity.feimotion" acceleration_scale_unit = 10000.0*m/s/s acceleration_file = "pathseries_acceleration.feimotion";
add imposed motion # 4 to node # 8  dof ux time_step = 0.01*s displacement_scale_unit = 10000.0*m displacement_file = "pathseries_displacement.feimotion" velocity_scale_unit = 10000.0*m/s velocity_file = "pathseries_velocity.feimotion" acceleration_scale_unit = 10000.0*m/s/s acceleration_file = "pathseries_acceleration.feimotion";
add imposed motion # 5 to node # 13 dof ux time_step = 0.01*s displacement_scale_unit = 10000.0*m displacement_file = "pathseries_displacement.feimotion" velocity_scale_unit = 10000.0*m/s velocity_file = "pathseries_velocity.feimotion" acceleration_scale_unit = 10000.0*m/s/s acceleration_file = "pathseries_acceleration.feimotion";
add imposed motion # 6 to node # 14 dof ux time_step = 0.01*s displacement_scale_unit = 10000.0*m displacement_file = "pathseries_displacement.feimotion" velocity_scale_unit = 10000.0*m/s velocity_file = "pathseries_velocity.feimotion" acceleration_scale_unit = 10000.0*m/s/s acceleration_file = "pathseries_acceleration.feimotion";
add imposed motion # 7 to node # 15 dof ux time_step = 0.01*s displacement_scale_unit = 10000.0*m displacement_file = "pathseries_displacement.feimotion" velocity_scale_unit = 10000.0*m/s velocity_file = "pathseries_velocity.feimotion" acceleration_scale_unit = 10000.0*m/s/s acceleration_file = "pathseries_acceleration.feimotion";
add imposed motion # 8 to node # 16 dof ux time_step = 0.01*s displacement_scale_unit = 10000.0*m displacement_file = "pathseries_displacement.feimotion" velocity_scale_unit = 10000.0*m/s velocity_file = "pathseries_velocity.feimotion" acceleration_scale_unit = 10000.0*m/s/s acceleration_file = "pathseries_acceleration.feimotion";
add imposed motion # 9 to node # 27 dof ux time_step = 0.01*s displacement_scale_unit = 10000.0*m displacement_file = "pathseries_displacement.feimotion" velocity_scale_unit = 10000.0*m/s velocity_file = "pathseries_velocity.feimotion" acceleration_scale_unit = 10000.0*m/s/s acceleration_file = "pathseries_acceleration.feimotion";



define dynamic integrator Newmark with gamma = 0.5 beta = 0.25;
define algorithm With_no_convergence_check;
define solver ProfileSPD;

simulate 8 steps using transient algorithm time_step = 0.01*s;


print node # 1;
print node # 5;
print node # 9;
print node # 14;
print node # 19;
print node # 23;
print node # 24;
print node # 26;


bye;
